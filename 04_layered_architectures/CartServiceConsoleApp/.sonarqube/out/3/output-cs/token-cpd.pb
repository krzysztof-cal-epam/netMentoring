®_
tC:\netMentoring\04_layered_architectures\CartServiceConsoleApp\CatalogService.Application\Services\ProductService.cs
	namespace 	
CatalogService
 
. 
Application $
.$ %
Services% -
{ 
public 

class 
ProductService 
:  !
IProductService" 1
{		 
private

 
readonly

 
IProductRepository

 +
_productRepository

, >
;

> ?
private 
readonly 
IRepository $
<$ %
Category% -
>- .
_categoryRepository/ B
;B C
public 
ProductService 
( 
IProductRepository 0
productRepository1 B
,B C
IRepositoryD O
<O P
CategoryP X
>X Y
categoryRepositoryZ l
)l m
{ 	
_productRepository 
=  
productRepository! 2
;2 3
_categoryRepository 
=  !
categoryRepository" 4
;4 5
} 	
public 
async 
Task 
< 

ProductDto $
>$ %
AddAsync& .
(. /

ProductDto/ 9

productDto: D
)D E
{ 	
var 
category 
= 
await  
_categoryRepository! 4
.4 5
GetByIdAsync5 A
(A B

productDtoB L
.L M

CategoryIdM W
)W X
;X Y
if 
( 
category 
== 
null  
)  !
throw 
new 
	Exception #
(# $
$"$ &
$str& 7
{7 8

productDto8 B
.B C

CategoryIdC M
}M N
$strN ^
"^ _
)_ `
;` a
var 
product 
= 
new 
Product %
{ 
Name 
= 

productDto !
.! "
Name" &
,& '
Description 
= 

productDto (
.( )
Description) 4
,4 5
Image 
= 

productDto "
." #
Image# (
,( )
Price 
= 

productDto "
." #
Price# (
,( )
Amount 
= 

productDto #
.# $
Amount$ *
,* +

CategoryId   
=   

productDto   '
.  ' (

CategoryId  ( 2
}!! 
;!! 
var## 
res## 
=## 
await## 
_productRepository## .
.##. /
AddAsync##/ 7
(##7 8
product##8 ?
)##? @
;##@ A
if%% 
(%% 
res%% 
==%% 
null%% 
)%% 
{&& 
throw'' 
new'' 
	Exception'' #
(''# $
$str''$ <
)''< =
;''= >
}(( 
return** 
new** 

ProductDto** !
{++ 
Id,, 
=,, 
res,, 
.,, 
Id,, 
,,, 
Name-- 
=-- 
res-- 
.-- 
Name-- 
,--  
Description.. 
=.. 
res.. !
...! "
Description.." -
,..- .
Price// 
=// 
res// 
.// 
Price// !
,//! "
Amount00 
=00 
res00 
.00 
Amount00 #
,00# $

CategoryId11 
=11 
res11  
.11  !

CategoryId11! +
}22 
;22 
}33 	
public55 
async55 
Task55 
DeleteAsync55 %
(55% &
int55& )
id55* ,
)55, -
{66 	
await77 
_productRepository77 $
.77$ %
DeleteAsync77% 0
(770 1
id771 3
)773 4
;774 5
}88 	
public:: 
async:: 
Task:: 
<:: 

ProductDto:: $
>::$ %
GetByIdAsync::& 2
(::2 3
int::3 6
id::7 9
)::9 :
{;; 	
var<< 
product<< 
=<< 
await<< 
_productRepository<<  2
.<<2 3
GetByIdAsync<<3 ?
(<<? @
id<<@ B
)<<B C
;<<C D
if== 
(== 
product== 
==== 
null== 
)==  
throw>> 
new>> 
	Exception>> #
(>># $
$">>$ &
$str>>& 6
{>>6 7
id>>7 9
}>>9 :
$str>>: E
">>E F
)>>F G
;>>G H
return@@ 
new@@ 

ProductDto@@ !
{AA 
IdBB 
=BB 
productBB 
.BB 
IdBB 
,BB  
NameCC 
=CC 
productCC 
.CC 
NameCC #
,CC# $
DescriptionDD 
=DD 
productDD %
.DD% &
DescriptionDD& 1
,DD1 2
ImageEE 
=EE 
productEE 
.EE  
ImageEE  %
,EE% &
PriceFF 
=FF 
productFF 
.FF  
PriceFF  %
,FF% &
AmountGG 
=GG 
productGG  
.GG  !
AmountGG! '
,GG' (

CategoryIdHH 
=HH 
productHH $
.HH$ %

CategoryIdHH% /
}II 
;II 
}JJ 	
publicLL 
asyncLL 
TaskLL 
<LL 
IEnumerableLL %
<LL% &

ProductDtoLL& 0
>LL0 1
>LL1 2
	ListAsyncLL3 <
(LL< =
intLL= @
?LL@ A

categoryIdLLB L
,LLL M
intLLN Q
pageLLR V
,LLV W
intLLX [
pageSizeLL\ d
)LLd e
{MM 	
varNN 
productsNN 
=NN 
awaitNN  
_productRepositoryNN! 3
.NN3 4
	ListAsyncNN4 =
(NN= >

categoryIdNN> H
,NNH I
pageNNJ N
,NNN O
pageSizeNNP X
)NNX Y
;NNY Z
returnPP 
productsPP 
.PP 
SelectPP "
(PP" #
pPP# $
=>PP% '
newPP( +

ProductDtoPP, 6
{QQ 
IdRR 
=RR 
pRR 
.RR 
IdRR 
,RR 
NameSS 
=SS 
pSS 
.SS 
NameSS 
,SS 
DescriptionTT 
=TT 
pTT 
.TT  
DescriptionTT  +
,TT+ ,
PriceUU 
=UU 
pUU 
.UU 
PriceUU 
,UU  
AmountVV 
=VV 
pVV 
.VV 
AmountVV !
,VV! "

CategoryIdWW 
=WW 
pWW 
.WW 

CategoryIdWW )
,WW) *
}XX 
)XX 
.XX 
ToListXX 
(XX 
)XX 
;XX 
}YY 	
public[[ 
async[[ 
Task[[ 
<[[ 
IEnumerable[[ %
<[[% &

ProductDto[[& 0
>[[0 1
>[[1 2
	ListAsync[[3 <
([[< =
)[[= >
{\\ 	
var]] 
products]] 
=]] 
await]]  
_productRepository]]! 3
.]]3 4
	ListAsync]]4 =
(]]= >
)]]> ?
;]]? @
return__ 
products__ 
.__ 
Select__ "
(__" #
p__# $
=>__% '
new__( +

ProductDto__, 6
{`` 
Idaa 
=aa 
paa 
.aa 
Idaa 
,aa 
Namebb 
=bb 
pbb 
.bb 
Namebb 
,bb 
Descriptioncc 
=cc 
pcc 
.cc  
Descriptioncc  +
,cc+ ,
Imagedd 
=dd 
pdd 
.dd 
Imagedd 
,dd  
Priceee 
=ee 
pee 
.ee 
Priceee 
,ee  
Amountff 
=ff 
pff 
.ff 
Amountff !
,ff! "

CategoryIdgg 
=gg 
pgg 
.gg 

CategoryIdgg )
}hh 
)hh 
;hh 
}ii 	
publickk 
asynckk 
Taskkk 
UpdateAsynckk %
(kk% &

ProductDtokk& 0

productDtokk1 ;
)kk; <
{ll 	
varmm 
productmm 
=mm 
awaitmm 
_productRepositorymm  2
.mm2 3
GetByIdAsyncmm3 ?
(mm? @

productDtomm@ J
.mmJ K
IdmmK M
)mmM N
;mmN O
ifnn 
(nn 
productnn 
==nn 
nullnn 
)nn  
throwoo 
newoo 
	Exceptionoo #
(oo# $
$"oo$ &
$stroo& 6
{oo6 7

productDtooo7 A
.ooA B
IdooB D
}ooD E
$strooE P
"ooP Q
)ooQ R
;ooR S
varqq 
categoryqq 
=qq 
awaitqq  
_categoryRepositoryqq! 4
.qq4 5
GetByIdAsyncqq5 A
(qqA B

productDtoqqB L
.qqL M

CategoryIdqqM W
)qqW X
;qqX Y
ifrr 
(rr 
categoryrr 
==rr 
nullrr  
)rr  !
throwss 
newss 
	Exceptionss #
(ss# $
$"ss$ &
$strss& 7
{ss7 8

productDtoss8 B
.ssB C

CategoryIdssC M
}ssM N
$strssN ^
"ss^ _
)ss_ `
;ss` a
productuu 
.uu 
Nameuu 
=uu 

productDtouu %
.uu% &
Nameuu& *
;uu* +
productvv 
.vv 
Descriptionvv 
=vv  !

productDtovv" ,
.vv, -
Descriptionvv- 8
;vv8 9
productww 
.ww 
Imageww 
=ww 

productDtoww &
.ww& '
Imageww' ,
;ww, -
productxx 
.xx 
Pricexx 
=xx 

productDtoxx &
.xx& '
Pricexx' ,
;xx, -
productyy 
.yy 
Amountyy 
=yy 

productDtoyy '
.yy' (
Amountyy( .
;yy. /
productzz 
.zz 

CategoryIdzz 
=zz  

productDtozz! +
.zz+ ,

CategoryIdzz, 6
;zz6 7
var|| 
eventPayload|| 
=|| 
new|| "
{}} 
ItemId~~ 
=~~ 
product~~  
.~~  !
Id~~! #
,~~# $
Name 
= 
product 
. 
Name #
,# $
Description
 
=
 
product
 %
.
% &
Description
& 1
,
1 2
Image
 
=
 
product
 
.
  
Image
  %
,
% &
Price
 
=
 
product
 
.
  
Price
  %
,
% &

CategoryId
 
=
 
product
 $
.
$ %

CategoryId
% /
}
 
;
 
await
  
_productRepository
 $
.
$ %*
UpdateProductWithOutboxAsync
% A
(
A B
product
B I
,
I J
$str
K [
,
[ \
eventPayload
] i
)
i j
;
j k
}
 	
}
 
} ²7
uC:\netMentoring\04_layered_architectures\CartServiceConsoleApp\CatalogService.Application\Services\CategoryService.cs
	namespace 	
CatalogService
 
. 
Application $
.$ %
Services% -
{ 
public 

class 
CategoryService  
:! "
ICategoryService# 3
{		 
private

 
readonly

 
ICategoryRepository

 ,
_categoryRepository

- @
;

@ A
public 
CategoryService 
( 
ICategoryRepository 2
categoryRepository3 E
)E F
{ 	
_categoryRepository 
=  !
categoryRepository" 4
;4 5
} 	
public 
async 
Task 
< 
CategoryDto %
>% &
AddAsync' /
(/ 0
CategoryDto0 ;
categoryDto< G
)G H
{ 	
var 
category 
= 
new 
Category '
{ 
Name 
= 
categoryDto "
." #
Name# '
,' (
ImageUrl 
= 
categoryDto &
.& '
ImageUrl' /
,/ 0
ParentCategoryId  
=! "
categoryDto# .
.. /
ParentCategoryId/ ?
} 
; 
await 
_categoryRepository %
.% &
AddAsync& .
(. /
category/ 7
)7 8
;8 9
return 
new 
CategoryDto "
{ 
Id 
= 
category 
. 
Id  
,  !
Name 
= 
category 
.  
Name  $
,$ %
ImageUrl   
=   
category   #
.  # $
ImageUrl  $ ,
,  , -
ParentCategoryId!!  
=!!! "
category!!# +
.!!+ ,
ParentCategoryId!!, <
}"" 
;"" 
}## 	
public%% 
async%% 
Task%% 
DeleteAsync%% %
(%%% &
int%%& )
id%%* ,
)%%, -
{&& 	
try'' 
{(( 
await)) 
_categoryRepository)) )
.))) *#
DeleteWithProductsAsync))* A
())A B
id))B D
)))D E
;))E F
}** 
catch++ 
(++  
KeyNotFoundException++ '
ex++( *
)++* +
{,, 
throw-- 
new-- 
	Exception-- #
(--# $
$"--$ &
$str--& -
{--- .
ex--. 0
.--0 1
Message--1 8
}--8 9
"--9 :
)--: ;
;--; <
}.. 
catch// 
(// 
	Exception// 
ex// 
)//  
{00 
throw11 
new11 
	Exception11 #
(11# $
$"11$ &
$str11& \
{11\ ]
ex11] _
.11_ `
Message11` g
}11g h
"11h i
)11i j
;11j k
}22 
}33 	
public55 
async55 
Task55 
<55 
CategoryDto55 %
>55% &
GetByIdAsync55' 3
(553 4
int554 7
id558 :
)55: ;
{66 	
var77 
category77 
=77 
await77  
_categoryRepository77! 4
.774 5
GetByIdAsync775 A
(77A B
id77B D
)77D E
;77E F
if88 
(88 
category88 
==88 
null88  
)88  !
throw99 
new99 
	Exception99 #
(99# $
$"99$ &
$str99& 7
{997 8
id998 :
}99: ;
$str99; F
"99F G
)99G H
;99H I
return;; 
new;; 
CategoryDto;; "
{<< 
Id== 
=== 
category== 
.== 
Id==  
,==  !
Name>> 
=>> 
category>> 
.>>  
Name>>  $
,>>$ %
ImageUrl?? 
=?? 
category?? #
.??# $
ImageUrl??$ ,
,??, -
ParentCategoryId@@  
=@@! "
category@@# +
.@@+ ,
ParentCategoryId@@, <
}AA 
;AA 
}BB 	
publicDD 
asyncDD 
TaskDD 
<DD 
IEnumerableDD %
<DD% &
CategoryDtoDD& 1
>DD1 2
>DD2 3
	ListAsyncDD4 =
(DD= >
)DD> ?
{EE 	
varFF 

categoriesFF 
=FF 
awaitFF "
_categoryRepositoryFF# 6
.FF6 7
	ListAsyncFF7 @
(FF@ A
)FFA B
;FFB C
returnGG 

categoriesGG 
.GG 
SelectGG $
(GG$ %
cGG% &
=>GG' )
newGG* -
CategoryDtoGG. 9
{HH 
IdII 
=II 
cII 
.II 
IdII 
,II 
NameJJ 
=JJ 
cJJ 
.JJ 
NameJJ 
,JJ 
ImageUrlKK 
=KK 
cKK 
.KK 
ImageUrlKK %
,KK% &
ParentCategoryIdLL  
=LL! "
cLL# $
.LL$ %
ParentCategoryIdLL% 5
}MM 
)MM 
;MM 
}NN 	
publicPP 
asyncPP 
TaskPP 
UpdateAsyncPP %
(PP% &
CategoryDtoPP& 1
categoryDtoPP2 =
)PP= >
{QQ 	
varRR 
categoryRR 
=RR 
awaitRR  
_categoryRepositoryRR! 4
.RR4 5
GetByIdAsyncRR5 A
(RRA B
categoryDtoRRB M
.RRM N
IdRRN P
)RRP Q
;RRQ R
ifSS 
(SS 
categorySS 
==SS 
nullSS  
)SS  !
throwTT 
newTT 
	ExceptionTT #
(TT# $
$"TT$ &
$strTT& 7
{TT7 8
categoryDtoTT8 C
.TTC D
IdTTD F
}TTF G
$strTTG R
"TTR S
)TTS T
;TTT U
categoryVV 
.VV 
NameVV 
=VV 
categoryDtoVV '
.VV' (
NameVV( ,
;VV, -
categoryWW 
.WW 
ImageUrlWW 
=WW 
categoryDtoWW  +
.WW+ ,
ImageUrlWW, 4
;WW4 5
categoryXX 
.XX 
ParentCategoryIdXX %
=XX& '
categoryDtoXX( 3
.XX3 4
ParentCategoryIdXX4 D
;XXD E
awaitZZ 
_categoryRepositoryZZ %
.ZZ% &
UpdateAsyncZZ& 1
(ZZ1 2
categoryZZ2 :
)ZZ: ;
;ZZ; <
}[[ 	
}\\ 
}]] 
qC:\netMentoring\04_layered_architectures\CartServiceConsoleApp\CatalogService.Application\Services\CartService.cs
	namespace 	
CatalogService
 
. 
Application $
.$ %
Services% -
{		 
public

 

class

 
CartService

 
:

 
ICartService

 +
{ 
private 
readonly 
ICartRepository (
_cartRepository) 8
;8 9
public 
CartService 
( 
ICartRepository *
cartRepository+ 9
)9 :
{ 	
_cartRepository 
= 
cartRepository ,
;, -
} 	
public 
CartDto 
GetCartInfo "
(" #
Guid# '
cartId( .
). /
{ 	
if 
( 
cartId 
== 
Guid 
. 
Empty $
)$ %
{ 
throw 
new #
CartValidationException 1
(1 2
$str2 W
)W X
;X Y
} 
try 
{ 
var 
cart 
= 
_cartRepository *
.* +
GetCartById+ 6
(6 7
cartId7 =
)= >
;> ?
return 
new 
CartDto "
{ 
CartId 
= 
cart !
.! "
Id" $
,$ %
Items   
=   
cart    
.    !
Items  ! &
.  & '
Select  ' -
(  - .
item  . 2
=>  3 5
new  6 9
CartItemDto  : E
{!! 
Id"" 
="" 
item"" !
.""! "
Id""" $
,""$ %
Name## 
=## 
item## #
.### $
Name##$ (
,##( )
Price$$ 
=$$ 
item$$  $
.$$$ %
Price$$% *
,$$* +
Quantity%%  
=%%! "
item%%# '
.%%' (
Quantity%%( 0
,%%0 1
Image&& 
=&& 
item&&  $
.&&$ %
Image&&% *
!=&&+ -
null&&. 2
?'' 
new'' !
ImageItemDto''" .
{(( 
ImageUrl))  (
=))) *
item))+ /
.))/ 0
Image))0 5
.))5 6
ImageUrl))6 >
,))> ?
AltText**  '
=**( )
item*** .
.**. /
Image**/ 4
.**4 5
AltText**5 <
}++ 
:,, 
null,, "
}-- 
)-- 
.-- 
ToList-- 
(-- 
)-- 
}.. 
;.. 
}// 
catch00 
(00 !
CartNotFoundException00 (
ex00) +
)00+ ,
{11 
throw22 
;22 
}33 
catch44 
(44 
RepositoryException44 &
ex44' )
)44) *
{55 
throw66 
new66  
ApplicationException66 .
(66. /
$str66/ r
,66r s
ex66t v
)66v w
;66w x
}77 
}88 	
public:: 
void:: 
AddItemToCart:: !
(::! "
Guid::" &
cartId::' -
,::- .
CartItemDto::/ :
cartItemDto::; F
)::F G
{;; 	
if<< 
(<< 
cartId<< 
==<< 
Guid<< 
.<< 
Empty<< $
)<<$ %
{== 
throw>> 
new>> #
CartValidationException>> 1
(>>1 2
$str>>2 N
)>>N O
;>>O P
}?? 
ifAA 
(AA 
cartItemDtoAA 
==AA 
nullAA #
||AA$ &
stringAA' -
.AA- .
IsNullOrEmptyAA. ;
(AA; <
cartItemDtoAA< G
.AAG H
NameAAH L
)AAL M
)AAM N
{BB 
throwCC 
newCC #
CartValidationExceptionCC 1
(CC1 2
$strCC2 I
)CCI J
;CCJ K
}DD 
tryFF 
{GG 
CartHH 
?HH 
cartHH 
=HH 
nullHH !
;HH! "
tryII 
{JJ 
cartKK 
=KK 
_cartRepositoryKK *
.KK* +
GetCartByIdKK+ 6
(KK6 7
cartIdKK7 =
)KK= >
;KK> ?
}LL 
catchMM 
(MM !
CartNotFoundExceptionMM +
exMM, .
)MM. /
{NN 
cartOO 
=OO 
newOO 
CartOO #
(OO# $
cartIdOO$ *
)OO* +
;OO+ ,
}PP 
varRR 
itemRR 
=RR 
cartRR 
.RR  
ItemsRR  %
.RR% &
FirstOrDefaultRR& 4
(RR4 5
iRR5 6
=>RR7 9
iRR: ;
.RR; <
IdRR< >
==RR? A
cartItemDtoRRB M
.RRM N
IdRRN P
)RRP Q
;RRQ R
ifTT 
(TT 
itemTT 
!=TT 
nullTT  
)TT  !
{UU 
itemVV 
.VV 
QuantityVV !
+=VV" $
cartItemDtoVV% 0
.VV0 1
QuantityVV1 9
;VV9 :
}WW 
elseXX 
{YY 
cartZZ 
.ZZ 
ItemsZZ 
.ZZ 
AddZZ "
(ZZ" #
newZZ# &
CartItemZZ' /
{[[ 
Id\\ 
=\\ 
cartItemDto\\ (
.\\( )
Id\\) +
,\\+ ,
Name]] 
=]] 
cartItemDto]] *
.]]* +
Name]]+ /
,]]/ 0
Price^^ 
=^^ 
cartItemDto^^  +
.^^+ ,
Price^^, 1
,^^1 2
Quantity__  
=__! "
cartItemDto__# .
.__. /
Quantity__/ 7
,__7 8
Image`` 
=`` 
cartItemDto``  +
.``+ ,
Image``, 1
!=``2 4
null``5 9
?aa 
newaa !
	ImageItemaa" +
{bb 
ImageUrlcc  (
=cc) *
cartItemDtocc+ 6
.cc6 7
Imagecc7 <
.cc< =
ImageUrlcc= E
,ccE F
AltTextdd  '
=dd( )
cartItemDtodd* 5
.dd5 6
Imagedd6 ;
.dd; <
AltTextdd< C
}ee 
:ff 
nullff "
}gg 
)gg 
;gg 
}hh 
_cartRepositoryjj 
.jj  
SaveCartjj  (
(jj( )
cartjj) -
)jj- .
;jj. /
}kk 
catchll 
(ll 
RepositoryExceptionll &
exll' )
)ll) *
{mm 
thrownn 
newnn  
ApplicationExceptionnn .
(nn. /
$strnn/ t
,nnt u
exnnv x
)nnx y
;nny z
}oo 
}pp 	
publicrr 
voidrr 
RemoveItemFromCartrr &
(rr& '
Guidrr' +
cartIdrr, 2
,rr2 3
intrr4 7
itemIdrr8 >
)rr> ?
{ss 	
iftt 
(tt 
cartIdtt 
==tt 
Guidtt 
.tt 
Emptytt $
)tt$ %
{uu 
throwvv 
newvv #
CartValidationExceptionvv 1
(vv1 2
$strvv2 N
)vvN O
;vvO P
}ww 
ifyy 
(yy 
itemIdyy 
<=yy 
$numyy 
)yy 
{zz 
throw{{ 
new{{ #
CartValidationException{{ 1
({{1 2
$str{{2 V
){{V W
;{{W X
}|| 
try~~ 
{ 
var
 
cart
 
=
 
_cartRepository
 *
.
* +
GetCartById
+ 6
(
6 7
cartId
7 =
)
= >
;
> ?
if
 
(
 
cart
 
!=
 
null
  
)
  !
{
 
if
 
(
 
!
 
cart
 
.
 
Items
 #
.
# $
Any
$ '
(
' (
i
( )
=>
* ,
i
- .
.
. /
Id
/ 1
==
2 4
itemId
5 ;
)
; <
)
< =
{
 
throw
 
new
 !#
ItemNotFoundException
" 7
(
7 8
itemId
8 >
,
> ?
cartId
@ F
)
F G
;
G H
}
 
cart
 
.
 
Items
 
.
 
	RemoveAll
 (
(
( )
i
) *
=>
+ -
i
. /
.
/ 0
Id
0 2
==
3 5
itemId
6 <
)
< =
;
= >
_cartRepository
 #
.
# $
SaveCart
$ ,
(
, -
cart
- 1
)
1 2
;
2 3
}
 
}
 
catch
 
(
 #
CartNotFoundException
 (
ex
) +
)
+ ,
{
 
throw
 
;
 
}
 
catch
 
(
 !
RepositoryException
 &
ex
' )
)
) *
{
 
throw
 
new
 "
ApplicationException
 .
(
. /
$str
/ y
,
y z
ex
{ }
)
} ~
;
~ 
}
 
}
 	
public
 
IEnumerable
 
<
 
CartDto
 "
>
" #
GetAllCarts
$ /
(
/ 0
)
0 1
{
 	
try
 
{
 
var
 
allCarts
 
=
 
_cartRepository
 .
.
. /
GetAllCarts
/ :
(
: ;
)
; <
;
< =
return
 
allCarts
 
.
  
Select
  &
(
& '
cart
' +
=>
, .
new
/ 2
CartDto
3 :
{
 
CartId
 
=
 
cart
 !
.
! "
Id
" $
,
$ %
Items
 
=
 
cart
  
.
  !
Items
! &
.
& '
Select
' -
(
- .
item
. 2
=>
3 5
new
6 9
CartItemDto
: E
{
 
Id
   
=
   
item
   !
.
  ! "
Id
  " $
,
  $ %
Name
¡¡ 
=
¡¡ 
item
¡¡ #
.
¡¡# $
Name
¡¡$ (
,
¡¡( )
Price
¢¢ 
=
¢¢ 
item
¢¢  $
.
¢¢$ %
Price
¢¢% *
,
¢¢* +
Quantity
££  
=
££! "
item
££# '
.
££' (
Quantity
££( 0
}
¤¤ 
)
¤¤ 
.
¤¤ 
ToList
¤¤ 
(
¤¤ 
)
¤¤ 
}
¥¥ 
)
¥¥ 
;
¥¥ 
}
¦¦ 
catch
§§ 
(
§§ !
RepositoryException
§§ &
ex
§§' )
)
§§) *
{
¨¨ 
throw
©© 
new
©© "
ApplicationException
©© .
(
©©. /
$str
©©/ r
,
©©r s
ex
©©t v
)
©©v w
;
©©w x
}
ªª 
}
«« 	
public
­­ 
void
­­ 
UpdateCartItems
­­ #
(
­­# $
int
­­$ '
	productId
­­( 1
,
­­1 2
string
­­3 9
?
­­9 :
updatedName
­­; F
,
­­F G
decimal
­­H O
?
­­O P
updatedPrice
­­Q ]
)
­­] ^
{
®® 	
if
¯¯ 
(
¯¯ 
	productId
¯¯ 
<=
¯¯ 
$num
¯¯ 
)
¯¯ 
{
°° 
throw
±± 
new
±± %
CartValidationException
±± 1
(
±±1 2
$str
±±2 X
)
±±X Y
;
±±Y Z
}
²² 
try
´´ 
{
µµ 
var
¶¶ 
allCarts
¶¶ 
=
¶¶ 
_cartRepository
¶¶ .
.
¶¶. /
GetAllCarts
¶¶/ :
(
¶¶: ;
)
¶¶; <
.
¶¶< =
ToList
¶¶= C
(
¶¶C D
)
¶¶D E
;
¶¶E F
var
·· 
cartsToUpdate
·· !
=
··" #
new
··$ '
List
··( ,
<
··, -
Cart
··- 1
>
··1 2
(
··2 3
)
··3 4
;
··4 5
foreach
¹¹ 
(
¹¹ 
var
¹¹ 
cart
¹¹ !
in
¹¹" $
allCarts
¹¹% -
)
¹¹- .
{
ºº 
bool
»» 
	isUpdated
»» "
=
»»# $
false
»»% *
;
»»* +
foreach
¼¼ 
(
¼¼ 
var
¼¼  
item
¼¼! %
in
¼¼& (
cart
¼¼) -
.
¼¼- .
Items
¼¼. 3
)
¼¼3 4
{
½½ 
if
¾¾ 
(
¾¾ 
item
¾¾  
.
¾¾  !
Id
¾¾! #
==
¾¾$ &
	productId
¾¾' 0
)
¾¾0 1
{
¿¿ 
if
ÀÀ 
(
ÀÀ  
!
ÀÀ  !
string
ÀÀ! '
.
ÀÀ' (
IsNullOrEmpty
ÀÀ( 5
(
ÀÀ5 6
updatedName
ÀÀ6 A
)
ÀÀA B
)
ÀÀB C
{
ÁÁ 
item
ÂÂ  $
.
ÂÂ$ %
Name
ÂÂ% )
=
ÂÂ* +
updatedName
ÂÂ, 7
;
ÂÂ7 8
}
ÃÃ 
if
ÄÄ 
(
ÄÄ  
updatedPrice
ÄÄ  ,
.
ÄÄ, -
HasValue
ÄÄ- 5
)
ÄÄ5 6
{
ÅÅ 
item
ÆÆ  $
.
ÆÆ$ %
Price
ÆÆ% *
=
ÆÆ+ ,
updatedPrice
ÆÆ- 9
.
ÆÆ9 :
Value
ÆÆ: ?
;
ÆÆ? @
}
ÇÇ 
	isUpdated
ÈÈ %
=
ÈÈ& '
true
ÈÈ( ,
;
ÈÈ, -
}
ÉÉ 
}
ÊÊ 
if
ËË 
(
ËË 
	isUpdated
ËË !
)
ËË! "
{
ÌÌ 
cartsToUpdate
ÍÍ %
.
ÍÍ% &
Add
ÍÍ& )
(
ÍÍ) *
cart
ÍÍ* .
)
ÍÍ. /
;
ÍÍ/ 0
}
ÎÎ 
}
ÏÏ 
foreach
ÑÑ 
(
ÑÑ 
var
ÑÑ 
cart
ÑÑ !
in
ÑÑ" $
cartsToUpdate
ÑÑ% 2
)
ÑÑ2 3
{
ÒÒ 
_cartRepository
ÓÓ #
.
ÓÓ# $
SaveCart
ÓÓ$ ,
(
ÓÓ, -
cart
ÓÓ- 1
)
ÓÓ1 2
;
ÓÓ2 3
}
ÔÔ 
}
ÕÕ 
catch
ÖÖ 
(
ÖÖ %
ObjectDisposedException
ÖÖ *
ex
ÖÖ+ -
)
ÖÖ- .
{
×× 
Console
ØØ 
.
ØØ 
	WriteLine
ØØ !
(
ØØ! "
$"
ØØ" $
$str
ØØ$ \
{
ØØ\ ]
ex
ØØ] _
.
ØØ_ `
Message
ØØ` g
}
ØØg h
"
ØØh i
)
ØØi j
;
ØØj k
throw
ÙÙ 
new
ÙÙ "
ApplicationException
ÙÙ .
(
ÙÙ. /
$str
ÙÙ/ Q
,
ÙÙQ R
ex
ÙÙS U
)
ÙÙU V
;
ÙÙV W
}
ÚÚ 
catch
ÛÛ 
(
ÛÛ (
OperationCanceledException
ÛÛ -
ex
ÛÛ. 0
)
ÛÛ0 1
{
ÜÜ 
Console
ÝÝ 
.
ÝÝ 
	WriteLine
ÝÝ !
(
ÝÝ! "
$"
ÝÝ" $
$str
ÝÝ$ Y
{
ÝÝY Z
ex
ÝÝZ \
.
ÝÝ\ ]
Message
ÝÝ] d
}
ÝÝd e
"
ÝÝe f
)
ÝÝf g
;
ÝÝg h
throw
ÞÞ 
new
ÞÞ "
ApplicationException
ÞÞ .
(
ÞÞ. /
$str
ÞÞ/ H
,
ÞÞH I
ex
ÞÞJ L
)
ÞÞL M
;
ÞÞM N
}
ßß 
catch
àà 
(
àà !
RepositoryException
àà &
ex
àà' )
)
àà) *
{
áá 
throw
ââ 
new
ââ "
ApplicationException
ââ .
(
ââ. /
$str
ââ/ h
,
ââh i
ex
ââj l
)
ââl m
;
ââm n
}
ãã 
}
ää 	
}
åå 
}ææ 
wC:\netMentoring\04_layered_architectures\CartServiceConsoleApp\CatalogService.Application\Interfaces\IProductService.cs
	namespace 	
CatalogService
 
. 
Application $
.$ %

Interfaces% /
{ 
public 

	interface 
IProductService $
{ 
Task 
< 

ProductDto 
> 
GetByIdAsync %
(% &
int& )
id* ,
), -
;- .
Task		 
<		 
IEnumerable		 
<		 

ProductDto		 #
>		# $
>		$ %
	ListAsync		& /
(		/ 0
)		0 1
;		1 2
Task

 
<

 

ProductDto

 
>

 
AddAsync

 !
(

! "

ProductDto

" ,
entity

- 3
)

3 4
;

4 5
Task 
UpdateAsync 
( 

ProductDto #
entity$ *
)* +
;+ ,
Task 
DeleteAsync 
( 
int 
id 
)  
;  !
Task 
< 
IEnumerable 
< 

ProductDto #
># $
>$ %
	ListAsync& /
(/ 0
int0 3
?3 4

categoryId5 ?
,? @
intA D
pageE I
,I J
intK N
pageSizeO W
)W X
;X Y
} 
} ±	
xC:\netMentoring\04_layered_architectures\CartServiceConsoleApp\CatalogService.Application\Interfaces\ICategoryService.cs
	namespace 	
CatalogService
 
. 
Application $
.$ %

Interfaces% /
{ 
public 

	interface 
ICategoryService %
{ 
Task 
< 
CategoryDto 
> 
GetByIdAsync &
(& '
int' *
id+ -
)- .
;. /
Task 
< 
IEnumerable 
< 
CategoryDto $
>$ %
>% &
	ListAsync' 0
(0 1
)1 2
;2 3
Task		 
<		 
CategoryDto		 
>		 
AddAsync		 "
(		" #
CategoryDto		# .
categoryDto		/ :
)		: ;
;		; <
Task

 
UpdateAsync

 
(

 
CategoryDto

 $
categoryDto

% 0
)

0 1
;

1 2
Task 
DeleteAsync 
( 
int 
id 
)  
;  !
} 
} 

tC:\netMentoring\04_layered_architectures\CartServiceConsoleApp\CatalogService.Application\Interfaces\ICartService.cs
	namespace 	
CatalogService
 
. 
Application $
.$ %

Interfaces% /
{ 
public 

	interface 
ICartService !
{ 
CartDto 
GetCartInfo 
( 
Guid  
cartId! '
)' (
;( )
void 
AddItemToCart 
( 
Guid 
cartId  &
,& '
CartItemDto( 3
item4 8
)8 9
;9 :
void		 
RemoveItemFromCart		 
(		  
Guid		  $
cartId		% +
,		+ ,
int		- 0
itemId		1 7
)		7 8
;		8 9
IEnumerable

 
<

 
CartDto

 
>

 
GetAllCarts

 (
(

( )
)

) *
;

* +
void 
UpdateCartItems 
( 
int  
	productId! *
,* +
string, 2
?2 3
updatedName4 ?
,? @
decimalA H
?H I
updatedPriceJ V
)V W
;W X
} 
} §
C:\netMentoring\04_layered_architectures\CartServiceConsoleApp\CatalogService.Application\Exceptions\CartValidationException.cs
	namespace 	
CatalogService
 
. 
Application $
.$ %

Exceptions% /
{ 
public 

class #
CartValidationException (
:) *
ValidationException+ >
{ 
public #
CartValidationException &
(& '
string' -
message. 5
)5 6
:7 8
base9 =
(= >
message> E
)E F
{G H
}I J
} 
}		 
kC:\netMentoring\04_layered_architectures\CartServiceConsoleApp\CatalogService.Application\Dto\ProductDto.cs
	namespace 	
CatalogService
 
. 
Application $
.$ %
Dto% (
{ 
public 

class 

ProductDto 
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
[		 	
Required			 
]		 
[

 	
	MaxLength

	 
(

 
$num

 
)

 
]

 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
=) *
string+ 1
.1 2
Empty2 7
;7 8
public 
string 
? 
Description "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
Uri 
? 
Image 
{ 
get 
;  
set! $
;$ %
}& '
[ 	
Required	 
] 
[ 	
Range	 
( 
$num 
, 
double 
. 
MaxValue $
,$ %
ErrorMessage& 2
=3 4
$str5 W
)W X
]X Y
public 
decimal 
Price 
{ 
get "
;" #
set$ '
;' (
}) *
[ 	
Required	 
] 
[ 	
Range	 
( 
$num 
, 
uint 
. 
MaxValue 
,  
ErrorMessage! -
=. /
$str0 L
)L M
]M N
public 
uint 
Amount 
{ 
get  
;  !
set" %
;% &
}' (
[ 	
Required	 
] 
public 
int 

CategoryId 
{ 
get  #
;# $
set% (
;( )
}* +
} 
} §
mC:\netMentoring\04_layered_architectures\CartServiceConsoleApp\CatalogService.Application\Dto\ImageItemDto.cs
	namespace 	
CatalogService
 
. 
Application $
.$ %
Dto% (
{ 
public 

class 
ImageItemDto 
{ 
public 
string 
ImageUrl 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
? 
AltText 
{  
get! $
;$ %
set& )
;) *
}+ ,
} 
}		 Ï	
lC:\netMentoring\04_layered_architectures\CartServiceConsoleApp\CatalogService.Application\Dto\CategoryDto.cs
	namespace 	
CatalogService
 
. 
Application $
.$ %
Dto% (
{ 
public 

class 
CategoryDto 
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
[		 	
Required			 
]		 
[

 	
	MaxLength

	 
(

 
$num

 
)

 
]

 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
=) *
string+ 1
.1 2
Empty2 7
;7 8
public 
Uri 
? 
ImageUrl 
{ 
get "
;" #
set$ '
;' (
}) *
public 
int 
? 
ParentCategoryId $
{% &
get' *
;* +
set, /
;/ 0
}1 2
} 
} ì
lC:\netMentoring\04_layered_architectures\CartServiceConsoleApp\CatalogService.Application\Dto\CartItemDto.cs
	namespace 	
CatalogService
 
. 
Application $
.$ %
Dto% (
{ 
public 

class 
CartItemDto 
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public 
ImageItemDto 
? 
Image "
{# $
get% (
;( )
set* -
;- .
}/ 0
public		 
decimal		 
Price		 
{		 
get		 "
;		" #
set		$ '
;		' (
}		) *
public

 
uint

 
Quantity

 
{

 
get

 "
;

" #
set

$ '
;

' (
}

) *
} 
} Ó
hC:\netMentoring\04_layered_architectures\CartServiceConsoleApp\CatalogService.Application\Dto\CartDto.cs
	namespace 	
CatalogService
 
. 
Application $
.$ %
Dto% (
{ 
public 

class 
CartDto 
{ 
public 
Guid 
CartId 
{ 
get  
;  !
set" %
;% &
}' (
public 
List 
< 
CartItemDto 
>  
Items! &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
=5 6
new7 :
List; ?
<? @
CartItemDto@ K
>K L
(L M
)M N
;N O
} 
}		 